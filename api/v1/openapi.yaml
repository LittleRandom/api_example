openapi: 3.0.2
info:
  title: Items API
  description: This is an example API for learning purposes.
  version: 0.0.1

servers:
  # - url: http://localhost:5050/
  - url: https://api.plainrandom.com/
    description: Optional server description, e.g. Main (production) server

components:
  schemas:
    item:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: thing1
        description:
          type: string
          example: This this a thing 

paths:
  /items:

    get:
      summary: Returns a list of items.
      description: Returns a list of all Items currently in the database.
      responses:
        "200": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/item"

    post:
      summary: Creates an item
      description: Sends a json object to the server and returns with a new entry with new UUID.
      parameters:
        - name: item
          in: body
          required: true
          description: body containing the following
          schema:
            type: object
            properties:
              title:
                type: string
                example: thing1
              description:
                type: string
                example: This this a thing
      responses:
        "201":
          description: Status Created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/item"

  /items/{id}:
    get:
      summary: Get specific item.
      description: Retrieves information for a specific key. If not provided, then the result is root GET request.
      parameters:
        - name: itemKey
          in: path
          required: false
          schema:
            type: string
            format: uuid
          description: Key of object to be retrieved.

    delete:
      summary: Deletes the item from database
      description: Sends a key to delete from the database.
      parameters:
        - name: itemKey
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The object to be deleted.



